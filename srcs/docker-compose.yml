version: '3'
services:
  nginx:
    build:
      context: .
      dockerfile: requirements/nginx/Dockerfile
      args:
        UID: ${UID}
        GID: ${GID}
    image: nginx
    container_name: nginx

    depends_on:
      - wordpress
    ports:
      - "443:443"
    networks:
      - inception
    volumes:
      - ./requirements/nginx/conf/:/etc/nginx/http.d/
      - ./requirements/nginx/tools:/etc/nginx/ssl/
      - wp-volume:/var/www/wordpress/
    restart: always

  mariadb:
    build:
      context: .
      dockerfile: requirements/mariadb/Dockerfile
      args:
        DB_NAME: ${DB_NAME}
        DB_USER: ${DB_USER}
        DB_PASS: ${DB_PASS}
        DB_ROOT: ${DB_ROOT}
    container_name: mariadb
    image: mariadb
    expose:
      - "3306"
    networks:
      - inception
    volumes:
      - db-volume:/var/lib/mysql
    restart: always

  wordpress:
    build:
      context: .
      dockerfile: requirements/wordpress/Dockerfile
      args:
        DB_NAME: ${DB_NAME}
        DB_USER: ${DB_USER}
        DB_PASS: ${DB_PASS}
        UID: ${UID}
        GID: ${GID}
    container_name: wordpress
    image: wordpress
    depends_on:
      - mariadb
    environment:
      - WORDPRESS_SITE_NAME=${WORDPRESS_SITE_NAME}
      - WORDPRESS_SITE_TITLE=${WORDPRESS_SITE_TITLE}
      - WORDPRESS_ADMIN_NAME=${WORDPRESS_SITE_TITLE}
      - WORDPRESS_ADMIN_PASSWORD=${WORDPRESS_ADMIN_PASSWORD}
      - WORDPRESS_ADMIN_EMAIL=${WORDPRESS_ADMIN_EMAIL}
      - WORDPRESS_USER_NAME=${WORDPRESS_USER_NAME}
      - WORDPRESS_USER_EMAIL=${WORDPRESS_USER_EMAIL}
      - WORDPRESS_USER_ROLE=${WORDPRESS_USER_ROLE}
      - WORDPRESS_USER_PASSWORD=${WORDPRESS_USER_PASSWORD}
      - DB_NAME=${DB_NAME}
      - DB_USER=${DB_USER}
      - DB_PASS=${DB_PASS}

    networks:
      - inception
    volumes:
      - wp-volume:/var/www/wordpress
    restart: always

  redis:
    build:
      context: .
      dockerfile: requirements/bonus/redis/Dockerfile
    container_name: redis
    image: redis
    depends_on:
      - wordpress
    expose:
      - "6379"
    networks:
      - inception
    restart: always

  vsftpd:
    build:
      context: .
      dockerfile: requirements/bonus/vsftpd/Dockerfile
      args:
        FTP_USR: ${FTP_USR}
        FTP_PWD: ${FTP_PWD}
    container_name: vsftpd
    image: vsftpd
    depends_on:
      - wordpress
    ports:
      - "21:21"
    volumes:
      - wp-volume:/var/www/
    networks:
     - inception
    restart: always

  adminer:
    build:
      context: .
      dockerfile: requirements/bonus/adminer/Dockerfile
    container_name: adminer
    image: adminer
    depends_on:
      - mariadb
    ports:
      - "8080:8080"
    networks:
     - inception
    restart: always
  website:
    build:
      context: .
      dockerfile: requirements/bonus/website/Dockerfile
    container_name: website
    image: website
    ports:
      - "8090:8090"
    restart: always
    networks:
      - inception

  portainer:
    container_name: portainer
    image: portainer
    build: ./requirements/bonus/portainer/
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
      - pr-volume:/data
    restart: always
    depends_on:
      - wordpress
    networks:
      - inception
    ports:
      - "8000:8000"
      - "9443:9443"
volumes:
  wp-volume:
    name: "wordpress"
    driver_opts:
      o: bind
      type: none
      device: /home/${USER}/data/wordpress
  pr-volume:
    name: "portainer"
    driver_opts:
      type: none
      o: bind
      device: /home/${USER}/data/portainer
  db-volume:
    name: "mariadb"
    driver_opts:
      o: bind
      type: none
      device: /home/${USER}/data/mariadb

networks:
    inception:
        name: inception
        driver: bridge
